{
  "_copyright" : "Copyright 2019 ForgeRock AS Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions andlimitations under the License.",
  "name" : "OBIE Assets Payment Consents Route",
  "baseURI" : "https://openidm.psd2acceldemo.fridam.aeet-forgerock.com",
  "condition" : "${matches(request.uri.path, '^/openbanking/v3.1/domestic-payment-consents((?!funds-confirmation).)*$')}",
  "capture" : [ "response", "request" ],
  "auditService" : {
    "name" : "obie-audit-service",
    "type" : "AuditService",
    "config" : {
      "enabled" : true,
      "event-handlers" : [ {
        "class" : "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
        "config" : {
          "name" : "obie-tpp-registration",
          "logDirectory" : "${openig.baseDirectory.path}/audit/obie",
          "elasticsearchCompatible" : true,
          "topics" : [ "access" ],
          "buffering" : {
            "enabled" : false,
            "maxSize" : 10000,
            "writeInterval" : "250 millis",
            "maxBatchedEvents" : 500
          },
          "fileRotation" : {
            "rotationEnabled" : false
          }
        }
      } ]
    }
  },
  "heap" : [ {
    "name" : "ReverseProxyHandler",
    "type" : "ReverseProxyHandler",
    "capture" : [ "response", "request" ]
  }, {
    "name" : "capture",
    "type" : "CaptureDecorator",
    "config" : {
      "captureEntity" : true,
      "captureContext" : true
    }
  }, {
    "name" : "ForgeRockClientHandler",
    "type" : "Chain",
    "config" : {
      "filters" : [ "TransactionIdOutboundFilter" ],
      "handler" : "ClientHandler"
    },
    "capture" : [ "response", "request" ]
  }, {
    "name" : "AmService-OBIE",
    "type" : "AmService",
    "config" : {
      "url" : "https://login.psd2acceldemo.fridam.aeet-forgerock.com",
      "realm" : "/openbanking",
      "ssoTokenHeader" : "iPlanetDirectoryPro",
      "version" : "6.5.1",
      "agent" : {
        "username" : "ig_agent",
        "passwordSecretId" : "ig.agent.secret"
      },
      "sessionCache" : {
        "enabled" : false
      }
    }
  } ],
  "secrets" : {
    "stores" : [ {
      "type" : "FileSystemSecretStore",
      "config" : {
        "format" : "PLAIN",
        "directory" : "${openig.baseDirectory.path}/secrets/obie"
      }
    } ]
  },
  "handler" : {
    "type" : "Chain",
    "config" : {
      "filters" : [ {
        "name" : "FormatJsonFilter",
        "type" : "FormatJsonFilter",
        "config" : { }
      }, {
        "name" : "HeaderFilter-AddResponseHeaders",
        "type" : "HeaderFilter",
        "config" : {
          "messageType" : "RESPONSE",
          "remove" : [ "Location", "Set-Cookie", "Server", "Strict-Transport-Security" ],
          "add" : {
            "x-fapi-interaction-id" : [ "${attributes.xfapiinteractionid != null ?  attributes.xfapiinteractionid : (context.id).substring(0,36)}" ],
            "Content-Type" : [ "application/json" ]
          }
        }
      }, {
        "name" : "ErrorResponseSwitch",
        "type" : "SwitchFilter",
        "config" : {
          "onResponse" : [ {
            "condition" : "${response.status.code == 400}",
            "handler" : {
              "name" : "FilterFailureHandler-400",
              "type" : "StaticResponseHandler",
              "config" : {
                "status" : 400,
                "reason" : "Bad Request",
                "entity" : "${attributes.error400}"
              }
            }
          }, {
            "condition" : "${response.status.code == 401}",
            "handler" : {
              "name" : "FilterFailureHandler-401",
              "type" : "StaticResponseHandler",
              "config" : {
                "status" : 401,
                "reason" : "Unauthorized",
                "entity" : "${attributes.error401}"
              }
            }
          }, {
            "condition" : "${response.status.code == 403}",
            "handler" : {
              "name" : "FilterFailureHandler-403",
              "type" : "StaticResponseHandler",
              "config" : {
                "status" : 403,
                "reason" : "Forbidden",
                "entity" : "${attributes.error403}"
              }
            }
          }, {
            "condition" : "${response.status.code == 404}",
            "handler" : {
              "name" : "FilterFailureHandler-404",
              "type" : "StaticResponseHandler",
              "config" : {
                "status" : 404,
                "reason" : "Not Found",
                "entity" : "${attributes.error404}"
              }
            }
          }, {
            "condition" : "${response.status.code == 500}",
            "handler" : {
              "name" : "FilterFailureHandler-500",
              "type" : "StaticResponseHandler",
              "config" : {
                "status" : 500,
                "reason" : "Internal Server Error",
                "entity" : "${attributes.error500}"
              }
            }
          } ]
        }
      }, {
        "name" : "AssignmentFilter-ErrorHandling",
        "type" : "AssignmentFilter",
        "config" : {
          "onResponse" : [ {
            "target" : "${attributes.error400}",
            "value" : "${toString('{\"Code\":\"400 BadRequest\",\"Id\":\"').concat(request.headers['x-request-id'][0]).concat('\",\"Message\":\"Invalid request parameters.\",\"Errors\":[{\"ErrorCode\":\"UK.OBIE.Bad.Request\",\"Message\":\"Invalid request parameters.\",\"Path\":\"\",\"Url\":\"').concat(request.uri.path).concat('\"}]}')}"
          }, {
            "target" : "${attributes.error401}",
            "value" : "${toString('{\"status\":\"401\",\"error\":\"Unauthorized\",\"message\":\"Unauthorized\",\"path\":\"').concat(request.uri.path).concat('\"}')}"
          }, {
            "target" : "${attributes.error403}",
            "value" : "${toString('{\"status\":\"403\",\"error\":\"Forbidden\",\"message\":\"Forbidden\",\"path\":\"').concat(request.uri.path).concat('\"}')}"
          }, {
            "target" : "${attributes.error404}",
            "value" : "${toString('{\"Code\":\"404 Not Found\",\"Id\":\"').concat(request.headers['x-request-id'][0]).concat('\",\"Message\":\"Resource Not Found.\",\"Errors\":[{\"ErrorCode\":\"UK.OBIE.NotFound\",\"Message\":\"Not Found.\",\"Path\":\"\",\"Url\":\"').concat(request.uri.path).concat('\"}]}')}"
          }, {
            "target" : "${attributes.error500}",
            "value" : "${toString('{\"Code\":\"500 Internal Server Error\",\"Id\":\"').concat(request.headers['x-request-id'][0]).concat('\",\"Message\":\"Internal Server Error.\",\"Errors\":[{\"ErrorCode\":\"UK.OBIE.UnexpectedError\",\"Message\":\"Unexpected Error.\",\"Path\":\"\",\"Url\":\"').concat(request.uri.path).concat('\"}]}')}"
          } ]
        }
      }, {
        "name" : "RetrieveSecretsFilter",
        "type" : "RetrieveSecretsFilter",
        "config" : {
          "directory" : "${openig.baseDirectory.path}/secrets/obie",
          "passwordSecretIds" : "igAgentOauth,idmagentsecret"
        }
      }, {
        "name" : "CertificateExtensionValidatorFilter",
        "type" : "CertificateExtensionValidatorFilter",
        "config" : {
          "routeRole" : "Payment Initiation",
          "clientCertificateHeaderName" : "ssl-client-cert"
        }
      }, {
        "name" : "OAuth2ResourceServerFilter-OBIE",
        "type" : "OAuth2ResourceServerFilter",
        "config" : {
          "scopes" : [ "payments" ],
          "requireHttps" : false,
          "realm" : "OpenIG",
          "accessTokenResolver" : {
            "name" : "token-resolver-1",
            "type" : "TokenIntrospectionAccessTokenResolver",
            "config" : {
              "endpoint" : "https://login.psd2acceldemo.fridam.aeet-forgerock.com/oauth2/realms/root/realms/openbanking/introspect",
              "providerHandler" : {
                "type" : "Chain",
                "config" : {
                  "filters" : [ {
                    "type" : "HeaderFilter",
                    "config" : {
                      "messageType" : "request",
                      "add" : {
                        "Authorization" : [ "Basic ${attributes.igAgentOauth}" ]
                      }
                    }
                  } ],
                  "handler" : "ForgeRockClientHandler"
                }
              }
            }
          }
        }
      }, {
        "name" : "AssignmentFilter-TranslatePathToIDM-1",
        "type" : "AssignmentFilter",
        "config" : {
          "onRequest" : [ {
            "target" : "${attributes.consentId}",
            "value" : "${split(request.uri.path, '/')[4]}"
          }, {
            "target" : "${request.uri.path}",
            "value" : "/openidm/endpoint/obPaymentIntent"
          }, {
            "target" : "${request.uri.query}",
            "value" : "${attributes.consentId != null ? toString('tppId=').concat(attributes.tppId).concat(toString('&consentId=')).concat(attributes.consentId) : toString('_action=create&tppId=').concat(contexts.oauth2.accessToken.info.client_id)}"
          }, {
            "target" : "${attributes.xfapiinteractionid}",
            "value" : "${request.headers['x-fapi-interaction-id'][0]}"
          } ]
        }
      }, {
        "name" : "HeaderFilter-ChangeHostToIDM",
        "type" : "HeaderFilter",
        "config" : {
          "messageType" : "REQUEST",
          "remove" : [ "host" ],
          "add" : {
            "host" : [ "openidm.psd2acceldemo.fridam.aeet-forgerock.com" ]
          }
        }
      }, {
        "name" : "HeaderFilter-AddAuthenticationHeadersForIDM",
        "type" : "HeaderFilter",
        "config" : {
          "messageType" : "REQUEST",
          "remove" : [ "X-OpenIDM-Username", "X-OpenIDM-Password" ],
          "add" : {
            "X-OpenIDM-Username" : [ "openidm-admin" ],
            "X-OpenIDM-Password" : [ "${decodeBase64(attributes.idmagentsecret)}" ]
          }
        }
      } ],
      "handler" : "ReverseProxyHandler"
    }
  }
}